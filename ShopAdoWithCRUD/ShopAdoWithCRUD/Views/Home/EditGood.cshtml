@model ShopAdoWithCRUD.Models.GoodVM
@{
    ViewBag.Title = "Edit Good";
}

@using (Html.BeginForm("EditGood", "Home", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.HiddenFor(x => x.Id, new { id = "editGoodId" })

    <div class="form-group">
        @Html.LabelFor(x => x.GoodName)<span class="hide-warning-message ml-5" id="error_GoodName">Name cannot be empty</span><br />
        @Html.TextBoxFor(x => x.GoodName, new { id = "editGoodName" })
    </div>

    <div class="form-group">
        @Html.LabelFor(x => x.Price)<span class="hide-warning-message ml-5" id="error_GoodPrice">Price is not valid</span><br />
        @Html.TextBoxFor(x => x.Price, new { id = "editGoodPrice" })
    </div>

    <div class="form-group">
        @Html.LabelFor(x => x.Count)<span class="hide-warning-message ml-5" id="error_GoodCount">Count is not valid</span><br />
        @Html.TextBoxFor(x => x.Count, new { id = "editGoodCount" })
    </div>

    <div class="form-group">
        @Html.LabelFor(x => x.CategoryId, "Caregory")
        @Html.DropDownListFor(x => x.CategoryId, ViewBag.categoryList as SelectList, new { @class = "form-control" })
    </div>

    <div class="form-group">
        @Html.LabelFor(x => x.ManufacturerId, "Manufacturer")
        @Html.DropDownListFor(x => x.ManufacturerId, ViewBag.manufacturerList as SelectList, new { @class = "form-control" })
    </div>

    <div class="edit-img-container">
        @{
            Html.RenderAction("EditPhotoCollection", new { good = Model });
        }

        <div>
            Add Photos to Goods<br />
            <input type="file" name="fileUpload" id="download_photos" multiple /><br />
        </div>
    </div>


    <input type="submit" class="btn btn-dark btn-lg save-changes" id="save_editgood" />
    <a id="MainContent_ctl00_SomeLinkButton"
       class="btn btn-info btn-sm"
       href="/Home/ShowGoods">Back</a>
}

