@model ShopAdoWithCRUD.Models.GoodVM
@{
    ViewBag.Title = "Edit Good";
}

@using (Html.BeginForm("EditGood", "Home", FormMethod.Post))
{
    @Html.HiddenFor(x => x.Id)

    <div class="form-group">
        @Html.LabelFor(x => x.GoodName)<span class="hide-warning-message ml-5" id="error_GoodName">Name cannot be empty</span><br />
        @Html.TextBoxFor(x => x.GoodName, new { id = "editGoodName" })
    </div>

    <div class="form-group">
        @Html.LabelFor(x => x.Price)<span class="hide-warning-message ml-5" id="error_GoodPrice">Price is not valid</span><br />
        @Html.TextBoxFor(x => x.Price, new { id = "editGoodPrice" })
    </div>

    <div class="form-group">
        @Html.LabelFor(x => x.Count)<span class="hide-warning-message ml-5" id="error_GoodCount">Count is not valid</span><br />
        @Html.TextBoxFor(x => x.Count, new { id = "editGoodCount" })
    </div>

    <div class="form-group">
        @Html.LabelFor(x => x.CategoryName)
        @Html.DropDownListFor(x => x.CategoryName, ViewBag.categoryList as SelectList, new { @class = "form-control" })
    </div>

    <div class="form-group">
        @Html.LabelFor(x => x.ManufacturerName)
        @Html.DropDownListFor(x => x.ManufacturerName, ViewBag.manufacturerList as SelectList, new { @class = "form-control" })
    </div>

    <div>
        Add Photos to Goods<br />
        @using (Html.BeginForm("Upload", "Home", FormMethod.Post, new { enctype = "multipart/form-data" }))
        {
            <input type="file" name="fileUpload" multiple /><br />

            <input type="submit" name="Submit" id="SubmitSingle" value="Upload" />
        }
    </div>

    <input type="submit" class="btn btn-dark btn-lg" id="save_editgood" />
    <a id="MainContent_ctl00_SomeLinkButton"
       class="btn btn-info btn-sm"
       href="/Home/ShowGoods">Back</a>
}

